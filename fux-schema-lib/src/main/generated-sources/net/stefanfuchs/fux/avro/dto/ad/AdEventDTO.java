/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.stefanfuchs.fux.avro.dto.ad;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Generic DTO for AdEvents */
@org.apache.avro.specific.AvroGenerated
public class AdEventDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2352439063659438912L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AdEventDTO\",\"namespace\":\"net.stefanfuchs.fux.avro.dto.ad\",\"doc\":\"Generic DTO for AdEvents\",\"fields\":[{\"name\":\"eventTime\",\"type\":\"string\",\"doc\":\"Timestamp of event time as Time-UUID\"},{\"name\":\"userUuid\",\"type\":[\"null\",\"string\"],\"doc\":\"Id of user that triggered the event as UUID\",\"default\":null},{\"name\":\"adUuid\",\"type\":\"string\",\"doc\":\"Id of Ad as UUID\"},{\"name\":\"source\",\"type\":[\"null\",\"string\"],\"doc\":\"Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType\",\"default\":null},{\"name\":\"categoryId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"vertical\",\"type\":[\"null\",\"string\"],\"doc\":\"Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType\",\"default\":null},{\"name\":\"adEventType\",\"type\":\"string\",\"doc\":\"Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType\"},{\"name\":\"payload\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AdEventDTO> ENCODER =
      new BinaryMessageEncoder<AdEventDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AdEventDTO> DECODER =
      new BinaryMessageDecoder<AdEventDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AdEventDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AdEventDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AdEventDTO>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AdEventDTO to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AdEventDTO from a ByteBuffer. */
  public static AdEventDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Timestamp of event time as Time-UUID */
  @Deprecated public java.lang.CharSequence eventTime;
  /** Id of user that triggered the event as UUID */
  @Deprecated public java.lang.CharSequence userUuid;
  /** Id of Ad as UUID */
  @Deprecated public java.lang.CharSequence adUuid;
  /** Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType */
  @Deprecated public java.lang.CharSequence source;
  @Deprecated public java.lang.Integer categoryId;
  /** Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType */
  @Deprecated public java.lang.CharSequence vertical;
  /** Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType */
  @Deprecated public java.lang.CharSequence adEventType;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AdEventDTO() {}

  /**
   * All-args constructor.
   * @param eventTime Timestamp of event time as Time-UUID
   * @param userUuid Id of user that triggered the event as UUID
   * @param adUuid Id of Ad as UUID
   * @param source Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType
   * @param categoryId The new value for categoryId
   * @param vertical Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType
   * @param adEventType Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType
   * @param payload The new value for payload
   */
  public AdEventDTO(java.lang.CharSequence eventTime, java.lang.CharSequence userUuid, java.lang.CharSequence adUuid, java.lang.CharSequence source, java.lang.Integer categoryId, java.lang.CharSequence vertical, java.lang.CharSequence adEventType, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> payload) {
    this.eventTime = eventTime;
    this.userUuid = userUuid;
    this.adUuid = adUuid;
    this.source = source;
    this.categoryId = categoryId;
    this.vertical = vertical;
    this.adEventType = adEventType;
    this.payload = payload;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventTime;
    case 1: return userUuid;
    case 2: return adUuid;
    case 3: return source;
    case 4: return categoryId;
    case 5: return vertical;
    case 6: return adEventType;
    case 7: return payload;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventTime = (java.lang.CharSequence)value$; break;
    case 1: userUuid = (java.lang.CharSequence)value$; break;
    case 2: adUuid = (java.lang.CharSequence)value$; break;
    case 3: source = (java.lang.CharSequence)value$; break;
    case 4: categoryId = (java.lang.Integer)value$; break;
    case 5: vertical = (java.lang.CharSequence)value$; break;
    case 6: adEventType = (java.lang.CharSequence)value$; break;
    case 7: payload = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'eventTime' field.
   * @return Timestamp of event time as Time-UUID
   */
  public java.lang.CharSequence getEventTime() {
    return eventTime;
  }

  /**
   * Sets the value of the 'eventTime' field.
   * Timestamp of event time as Time-UUID
   * @param value the value to set.
   */
  public void setEventTime(java.lang.CharSequence value) {
    this.eventTime = value;
  }

  /**
   * Gets the value of the 'userUuid' field.
   * @return Id of user that triggered the event as UUID
   */
  public java.lang.CharSequence getUserUuid() {
    return userUuid;
  }

  /**
   * Sets the value of the 'userUuid' field.
   * Id of user that triggered the event as UUID
   * @param value the value to set.
   */
  public void setUserUuid(java.lang.CharSequence value) {
    this.userUuid = value;
  }

  /**
   * Gets the value of the 'adUuid' field.
   * @return Id of Ad as UUID
   */
  public java.lang.CharSequence getAdUuid() {
    return adUuid;
  }

  /**
   * Sets the value of the 'adUuid' field.
   * Id of Ad as UUID
   * @param value the value to set.
   */
  public void setAdUuid(java.lang.CharSequence value) {
    this.adUuid = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType
   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'categoryId' field.
   * @return The value of the 'categoryId' field.
   */
  public java.lang.Integer getCategoryId() {
    return categoryId;
  }

  /**
   * Sets the value of the 'categoryId' field.
   * @param value the value to set.
   */
  public void setCategoryId(java.lang.Integer value) {
    this.categoryId = value;
  }

  /**
   * Gets the value of the 'vertical' field.
   * @return Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType
   */
  public java.lang.CharSequence getVertical() {
    return vertical;
  }

  /**
   * Sets the value of the 'vertical' field.
   * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType
   * @param value the value to set.
   */
  public void setVertical(java.lang.CharSequence value) {
    this.vertical = value;
  }

  /**
   * Gets the value of the 'adEventType' field.
   * @return Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType
   */
  public java.lang.CharSequence getAdEventType() {
    return adEventType;
  }

  /**
   * Sets the value of the 'adEventType' field.
   * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType
   * @param value the value to set.
   */
  public void setAdEventType(java.lang.CharSequence value) {
    this.adEventType = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * @return The value of the 'payload' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getPayload() {
    return payload;
  }

  /**
   * Sets the value of the 'payload' field.
   * @param value the value to set.
   */
  public void setPayload(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.payload = value;
  }

  /**
   * Creates a new AdEventDTO RecordBuilder.
   * @return A new AdEventDTO RecordBuilder
   */
  public static net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder newBuilder() {
    return new net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder();
  }

  /**
   * Creates a new AdEventDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AdEventDTO RecordBuilder
   */
  public static net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder newBuilder(net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder other) {
    return new net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder(other);
  }

  /**
   * Creates a new AdEventDTO RecordBuilder by copying an existing AdEventDTO instance.
   * @param other The existing instance to copy.
   * @return A new AdEventDTO RecordBuilder
   */
  public static net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder newBuilder(net.stefanfuchs.fux.avro.dto.ad.AdEventDTO other) {
    return new net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder(other);
  }

  /**
   * RecordBuilder for AdEventDTO instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AdEventDTO>
    implements org.apache.avro.data.RecordBuilder<AdEventDTO> {

    /** Timestamp of event time as Time-UUID */
    private java.lang.CharSequence eventTime;
    /** Id of user that triggered the event as UUID */
    private java.lang.CharSequence userUuid;
    /** Id of Ad as UUID */
    private java.lang.CharSequence adUuid;
    /** Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType */
    private java.lang.CharSequence source;
    private java.lang.Integer categoryId;
    /** Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType */
    private java.lang.CharSequence vertical;
    /** Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType */
    private java.lang.CharSequence adEventType;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> payload;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventTime)) {
        this.eventTime = data().deepCopy(fields()[0].schema(), other.eventTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userUuid)) {
        this.userUuid = data().deepCopy(fields()[1].schema(), other.userUuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.adUuid)) {
        this.adUuid = data().deepCopy(fields()[2].schema(), other.adUuid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.source)) {
        this.source = data().deepCopy(fields()[3].schema(), other.source);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.categoryId)) {
        this.categoryId = data().deepCopy(fields()[4].schema(), other.categoryId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.vertical)) {
        this.vertical = data().deepCopy(fields()[5].schema(), other.vertical);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.adEventType)) {
        this.adEventType = data().deepCopy(fields()[6].schema(), other.adEventType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.payload)) {
        this.payload = data().deepCopy(fields()[7].schema(), other.payload);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AdEventDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(net.stefanfuchs.fux.avro.dto.ad.AdEventDTO other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventTime)) {
        this.eventTime = data().deepCopy(fields()[0].schema(), other.eventTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userUuid)) {
        this.userUuid = data().deepCopy(fields()[1].schema(), other.userUuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.adUuid)) {
        this.adUuid = data().deepCopy(fields()[2].schema(), other.adUuid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.source)) {
        this.source = data().deepCopy(fields()[3].schema(), other.source);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.categoryId)) {
        this.categoryId = data().deepCopy(fields()[4].schema(), other.categoryId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.vertical)) {
        this.vertical = data().deepCopy(fields()[5].schema(), other.vertical);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.adEventType)) {
        this.adEventType = data().deepCopy(fields()[6].schema(), other.adEventType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.payload)) {
        this.payload = data().deepCopy(fields()[7].schema(), other.payload);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'eventTime' field.
      * Timestamp of event time as Time-UUID
      * @return The value.
      */
    public java.lang.CharSequence getEventTime() {
      return eventTime;
    }

    /**
      * Sets the value of the 'eventTime' field.
      * Timestamp of event time as Time-UUID
      * @param value The value of 'eventTime'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder setEventTime(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.eventTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTime' field has been set.
      * Timestamp of event time as Time-UUID
      * @return True if the 'eventTime' field has been set, false otherwise.
      */
    public boolean hasEventTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventTime' field.
      * Timestamp of event time as Time-UUID
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder clearEventTime() {
      eventTime = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userUuid' field.
      * Id of user that triggered the event as UUID
      * @return The value.
      */
    public java.lang.CharSequence getUserUuid() {
      return userUuid;
    }

    /**
      * Sets the value of the 'userUuid' field.
      * Id of user that triggered the event as UUID
      * @param value The value of 'userUuid'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder setUserUuid(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.userUuid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userUuid' field has been set.
      * Id of user that triggered the event as UUID
      * @return True if the 'userUuid' field has been set, false otherwise.
      */
    public boolean hasUserUuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userUuid' field.
      * Id of user that triggered the event as UUID
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder clearUserUuid() {
      userUuid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'adUuid' field.
      * Id of Ad as UUID
      * @return The value.
      */
    public java.lang.CharSequence getAdUuid() {
      return adUuid;
    }

    /**
      * Sets the value of the 'adUuid' field.
      * Id of Ad as UUID
      * @param value The value of 'adUuid'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder setAdUuid(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.adUuid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'adUuid' field has been set.
      * Id of Ad as UUID
      * @return True if the 'adUuid' field has been set, false otherwise.
      */
    public boolean hasAdUuid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'adUuid' field.
      * Id of Ad as UUID
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder clearAdUuid() {
      adUuid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType
      * @return The value.
      */
    public java.lang.CharSequence getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType
      * @param value The value of 'source'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.source = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'source' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.SourceType
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder clearSource() {
      source = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'categoryId' field.
      * @return The value.
      */
    public java.lang.Integer getCategoryId() {
      return categoryId;
    }

    /**
      * Sets the value of the 'categoryId' field.
      * @param value The value of 'categoryId'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder setCategoryId(java.lang.Integer value) {
      validate(fields()[4], value);
      this.categoryId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'categoryId' field has been set.
      * @return True if the 'categoryId' field has been set, false otherwise.
      */
    public boolean hasCategoryId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'categoryId' field.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder clearCategoryId() {
      categoryId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'vertical' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType
      * @return The value.
      */
    public java.lang.CharSequence getVertical() {
      return vertical;
    }

    /**
      * Sets the value of the 'vertical' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType
      * @param value The value of 'vertical'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder setVertical(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.vertical = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'vertical' field has been set.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType
      * @return True if the 'vertical' field has been set, false otherwise.
      */
    public boolean hasVertical() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'vertical' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.VerticalType
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder clearVertical() {
      vertical = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'adEventType' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType
      * @return The value.
      */
    public java.lang.CharSequence getAdEventType() {
      return adEventType;
    }

    /**
      * Sets the value of the 'adEventType' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType
      * @param value The value of 'adEventType'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder setAdEventType(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.adEventType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'adEventType' field has been set.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType
      * @return True if the 'adEventType' field has been set, false otherwise.
      */
    public boolean hasAdEventType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'adEventType' field.
      * Code of source as defined in net.stefanfuchs.fux.avro.enums.common.entity.ad.AdEventType
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder clearAdEventType() {
      adEventType = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'payload' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getPayload() {
      return payload;
    }

    /**
      * Sets the value of the 'payload' field.
      * @param value The value of 'payload'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder setPayload(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.payload = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'payload' field has been set.
      * @return True if the 'payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'payload' field.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.AdEventDTO.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AdEventDTO build() {
      try {
        AdEventDTO record = new AdEventDTO();
        record.eventTime = fieldSetFlags()[0] ? this.eventTime : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.userUuid = fieldSetFlags()[1] ? this.userUuid : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.adUuid = fieldSetFlags()[2] ? this.adUuid : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.source = fieldSetFlags()[3] ? this.source : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.categoryId = fieldSetFlags()[4] ? this.categoryId : (java.lang.Integer) defaultValue(fields()[4]);
        record.vertical = fieldSetFlags()[5] ? this.vertical : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.adEventType = fieldSetFlags()[6] ? this.adEventType : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.payload = fieldSetFlags()[7] ? this.payload : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[7]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AdEventDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<AdEventDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AdEventDTO>
    READER$ = (org.apache.avro.io.DatumReader<AdEventDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
