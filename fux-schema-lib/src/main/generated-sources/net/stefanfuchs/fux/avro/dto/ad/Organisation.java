/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.stefanfuchs.fux.avro.dto.ad;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Information about the organisation that owns an advert */
@org.apache.avro.specific.AvroGenerated
public class Organisation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8460994009887925016L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Organisation\",\"namespace\":\"net.stefanfuchs.fux.avro.dto.ad\",\"doc\":\"Information about the organisation that owns an advert\",\"fields\":[{\"name\":\"uuid\",\"type\":\"string\",\"doc\":\"The UUID of the organisation used between services\"},{\"name\":\"partnerId\",\"type\":[\"null\",\"string\"],\"doc\":\"ID used to identify the organisation by external systems\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"The organisation name\",\"default\":null},{\"name\":\"email\",\"type\":[\"null\",\"string\"],\"doc\":\"Main contact email address\",\"default\":null},{\"name\":\"phone\",\"type\":[\"null\",\"string\"],\"doc\":\"primary phone number\",\"default\":null},{\"name\":\"phone2\",\"type\":[\"null\",\"string\"],\"doc\":\"secondary phone number\",\"default\":null},{\"name\":\"fax\",\"type\":[\"null\",\"string\"],\"doc\":\"fax number\",\"default\":null},{\"name\":\"url\",\"type\":[\"null\",\"string\"],\"doc\":\"URL to the homepage\",\"default\":null},{\"name\":\"image\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OrgImage\",\"doc\":\"Images reference of an organisation\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"doc\":\"path to the image\",\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Description of the image\",\"default\":null}]}],\"doc\":\"logo of the organisation\",\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OrgAddress\",\"doc\":\"Address information of a organisation\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",\"string\"],\"doc\":\"primary key\",\"default\":null},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"doc\":\"country code\",\"default\":null},{\"name\":\"province\",\"type\":[\"null\",\"string\"],\"doc\":\"name of the provice (state)\",\"default\":null},{\"name\":\"district\",\"type\":[\"null\",\"string\"],\"doc\":\"The district the address belongs to\",\"default\":null},{\"name\":\"postCode\",\"type\":[\"null\",\"string\"],\"doc\":\"postal (zip) code\",\"default\":null},{\"name\":\"postalName\",\"type\":[\"null\",\"string\"],\"doc\":\"city name\",\"default\":null},{\"name\":\"street\",\"type\":[\"null\",\"string\"],\"doc\":\"street including housenumber etc.\",\"default\":null}]}],\"doc\":\"The postal address of the organisation\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Organisation> ENCODER =
      new BinaryMessageEncoder<Organisation>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Organisation> DECODER =
      new BinaryMessageDecoder<Organisation>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Organisation> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Organisation> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Organisation>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Organisation to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Organisation from a ByteBuffer. */
  public static Organisation fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The UUID of the organisation used between services */
  @Deprecated public java.lang.CharSequence uuid;
  /** ID used to identify the organisation by external systems */
  @Deprecated public java.lang.CharSequence partnerId;
  /** The organisation name */
  @Deprecated public java.lang.CharSequence name;
  /** Main contact email address */
  @Deprecated public java.lang.CharSequence email;
  /** primary phone number */
  @Deprecated public java.lang.CharSequence phone;
  /** secondary phone number */
  @Deprecated public java.lang.CharSequence phone2;
  /** fax number */
  @Deprecated public java.lang.CharSequence fax;
  /** URL to the homepage */
  @Deprecated public java.lang.CharSequence url;
  /** logo of the organisation */
  @Deprecated public net.stefanfuchs.fux.avro.dto.ad.OrgImage image;
  /** The postal address of the organisation */
  @Deprecated public net.stefanfuchs.fux.avro.dto.ad.OrgAddress address;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Organisation() {}

  /**
   * All-args constructor.
   * @param uuid The UUID of the organisation used between services
   * @param partnerId ID used to identify the organisation by external systems
   * @param name The organisation name
   * @param email Main contact email address
   * @param phone primary phone number
   * @param phone2 secondary phone number
   * @param fax fax number
   * @param url URL to the homepage
   * @param image logo of the organisation
   * @param address The postal address of the organisation
   */
  public Organisation(java.lang.CharSequence uuid, java.lang.CharSequence partnerId, java.lang.CharSequence name, java.lang.CharSequence email, java.lang.CharSequence phone, java.lang.CharSequence phone2, java.lang.CharSequence fax, java.lang.CharSequence url, net.stefanfuchs.fux.avro.dto.ad.OrgImage image, net.stefanfuchs.fux.avro.dto.ad.OrgAddress address) {
    this.uuid = uuid;
    this.partnerId = partnerId;
    this.name = name;
    this.email = email;
    this.phone = phone;
    this.phone2 = phone2;
    this.fax = fax;
    this.url = url;
    this.image = image;
    this.address = address;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return partnerId;
    case 2: return name;
    case 3: return email;
    case 4: return phone;
    case 5: return phone2;
    case 6: return fax;
    case 7: return url;
    case 8: return image;
    case 9: return address;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.CharSequence)value$; break;
    case 1: partnerId = (java.lang.CharSequence)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: email = (java.lang.CharSequence)value$; break;
    case 4: phone = (java.lang.CharSequence)value$; break;
    case 5: phone2 = (java.lang.CharSequence)value$; break;
    case 6: fax = (java.lang.CharSequence)value$; break;
    case 7: url = (java.lang.CharSequence)value$; break;
    case 8: image = (net.stefanfuchs.fux.avro.dto.ad.OrgImage)value$; break;
    case 9: address = (net.stefanfuchs.fux.avro.dto.ad.OrgAddress)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The UUID of the organisation used between services
   */
  public java.lang.CharSequence getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * The UUID of the organisation used between services
   * @param value the value to set.
   */
  public void setUuid(java.lang.CharSequence value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'partnerId' field.
   * @return ID used to identify the organisation by external systems
   */
  public java.lang.CharSequence getPartnerId() {
    return partnerId;
  }

  /**
   * Sets the value of the 'partnerId' field.
   * ID used to identify the organisation by external systems
   * @param value the value to set.
   */
  public void setPartnerId(java.lang.CharSequence value) {
    this.partnerId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The organisation name
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * The organisation name
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return Main contact email address
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * Main contact email address
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * @return primary phone number
   */
  public java.lang.CharSequence getPhone() {
    return phone;
  }

  /**
   * Sets the value of the 'phone' field.
   * primary phone number
   * @param value the value to set.
   */
  public void setPhone(java.lang.CharSequence value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'phone2' field.
   * @return secondary phone number
   */
  public java.lang.CharSequence getPhone2() {
    return phone2;
  }

  /**
   * Sets the value of the 'phone2' field.
   * secondary phone number
   * @param value the value to set.
   */
  public void setPhone2(java.lang.CharSequence value) {
    this.phone2 = value;
  }

  /**
   * Gets the value of the 'fax' field.
   * @return fax number
   */
  public java.lang.CharSequence getFax() {
    return fax;
  }

  /**
   * Sets the value of the 'fax' field.
   * fax number
   * @param value the value to set.
   */
  public void setFax(java.lang.CharSequence value) {
    this.fax = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return URL to the homepage
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * URL to the homepage
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'image' field.
   * @return logo of the organisation
   */
  public net.stefanfuchs.fux.avro.dto.ad.OrgImage getImage() {
    return image;
  }

  /**
   * Sets the value of the 'image' field.
   * logo of the organisation
   * @param value the value to set.
   */
  public void setImage(net.stefanfuchs.fux.avro.dto.ad.OrgImage value) {
    this.image = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The postal address of the organisation
   */
  public net.stefanfuchs.fux.avro.dto.ad.OrgAddress getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * The postal address of the organisation
   * @param value the value to set.
   */
  public void setAddress(net.stefanfuchs.fux.avro.dto.ad.OrgAddress value) {
    this.address = value;
  }

  /**
   * Creates a new Organisation RecordBuilder.
   * @return A new Organisation RecordBuilder
   */
  public static net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder newBuilder() {
    return new net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder();
  }

  /**
   * Creates a new Organisation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Organisation RecordBuilder
   */
  public static net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder newBuilder(net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder other) {
    return new net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder(other);
  }

  /**
   * Creates a new Organisation RecordBuilder by copying an existing Organisation instance.
   * @param other The existing instance to copy.
   * @return A new Organisation RecordBuilder
   */
  public static net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder newBuilder(net.stefanfuchs.fux.avro.dto.ad.Organisation other) {
    return new net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder(other);
  }

  /**
   * RecordBuilder for Organisation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Organisation>
    implements org.apache.avro.data.RecordBuilder<Organisation> {

    /** The UUID of the organisation used between services */
    private java.lang.CharSequence uuid;
    /** ID used to identify the organisation by external systems */
    private java.lang.CharSequence partnerId;
    /** The organisation name */
    private java.lang.CharSequence name;
    /** Main contact email address */
    private java.lang.CharSequence email;
    /** primary phone number */
    private java.lang.CharSequence phone;
    /** secondary phone number */
    private java.lang.CharSequence phone2;
    /** fax number */
    private java.lang.CharSequence fax;
    /** URL to the homepage */
    private java.lang.CharSequence url;
    /** logo of the organisation */
    private net.stefanfuchs.fux.avro.dto.ad.OrgImage image;
    private net.stefanfuchs.fux.avro.dto.ad.OrgImage.Builder imageBuilder;
    /** The postal address of the organisation */
    private net.stefanfuchs.fux.avro.dto.ad.OrgAddress address;
    private net.stefanfuchs.fux.avro.dto.ad.OrgAddress.Builder addressBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.partnerId)) {
        this.partnerId = data().deepCopy(fields()[1].schema(), other.partnerId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.phone)) {
        this.phone = data().deepCopy(fields()[4].schema(), other.phone);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phone2)) {
        this.phone2 = data().deepCopy(fields()[5].schema(), other.phone2);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fax)) {
        this.fax = data().deepCopy(fields()[6].schema(), other.fax);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.url)) {
        this.url = data().deepCopy(fields()[7].schema(), other.url);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.image)) {
        this.image = data().deepCopy(fields()[8].schema(), other.image);
        fieldSetFlags()[8] = true;
      }
      if (other.hasImageBuilder()) {
        this.imageBuilder = net.stefanfuchs.fux.avro.dto.ad.OrgImage.newBuilder(other.getImageBuilder());
      }
      if (isValidValue(fields()[9], other.address)) {
        this.address = data().deepCopy(fields()[9].schema(), other.address);
        fieldSetFlags()[9] = true;
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = net.stefanfuchs.fux.avro.dto.ad.OrgAddress.newBuilder(other.getAddressBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Organisation instance
     * @param other The existing instance to copy.
     */
    private Builder(net.stefanfuchs.fux.avro.dto.ad.Organisation other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.partnerId)) {
        this.partnerId = data().deepCopy(fields()[1].schema(), other.partnerId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.phone)) {
        this.phone = data().deepCopy(fields()[4].schema(), other.phone);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phone2)) {
        this.phone2 = data().deepCopy(fields()[5].schema(), other.phone2);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fax)) {
        this.fax = data().deepCopy(fields()[6].schema(), other.fax);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.url)) {
        this.url = data().deepCopy(fields()[7].schema(), other.url);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.image)) {
        this.image = data().deepCopy(fields()[8].schema(), other.image);
        fieldSetFlags()[8] = true;
      }
      this.imageBuilder = null;
      if (isValidValue(fields()[9], other.address)) {
        this.address = data().deepCopy(fields()[9].schema(), other.address);
        fieldSetFlags()[9] = true;
      }
      this.addressBuilder = null;
    }

    /**
      * Gets the value of the 'uuid' field.
      * The UUID of the organisation used between services
      * @return The value.
      */
    public java.lang.CharSequence getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * The UUID of the organisation used between services
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setUuid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * The UUID of the organisation used between services
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * The UUID of the organisation used between services
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'partnerId' field.
      * ID used to identify the organisation by external systems
      * @return The value.
      */
    public java.lang.CharSequence getPartnerId() {
      return partnerId;
    }

    /**
      * Sets the value of the 'partnerId' field.
      * ID used to identify the organisation by external systems
      * @param value The value of 'partnerId'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setPartnerId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.partnerId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'partnerId' field has been set.
      * ID used to identify the organisation by external systems
      * @return True if the 'partnerId' field has been set, false otherwise.
      */
    public boolean hasPartnerId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'partnerId' field.
      * ID used to identify the organisation by external systems
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearPartnerId() {
      partnerId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * The organisation name
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * The organisation name
      * @param value The value of 'name'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * The organisation name
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * The organisation name
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * Main contact email address
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * Main contact email address
      * @param value The value of 'email'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.email = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * Main contact email address
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'email' field.
      * Main contact email address
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearEmail() {
      email = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * primary phone number
      * @return The value.
      */
    public java.lang.CharSequence getPhone() {
      return phone;
    }

    /**
      * Sets the value of the 'phone' field.
      * primary phone number
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setPhone(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.phone = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * primary phone number
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'phone' field.
      * primary phone number
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone2' field.
      * secondary phone number
      * @return The value.
      */
    public java.lang.CharSequence getPhone2() {
      return phone2;
    }

    /**
      * Sets the value of the 'phone2' field.
      * secondary phone number
      * @param value The value of 'phone2'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setPhone2(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.phone2 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'phone2' field has been set.
      * secondary phone number
      * @return True if the 'phone2' field has been set, false otherwise.
      */
    public boolean hasPhone2() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'phone2' field.
      * secondary phone number
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearPhone2() {
      phone2 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'fax' field.
      * fax number
      * @return The value.
      */
    public java.lang.CharSequence getFax() {
      return fax;
    }

    /**
      * Sets the value of the 'fax' field.
      * fax number
      * @param value The value of 'fax'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setFax(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.fax = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'fax' field has been set.
      * fax number
      * @return True if the 'fax' field has been set, false otherwise.
      */
    public boolean hasFax() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'fax' field.
      * fax number
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearFax() {
      fax = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * URL to the homepage
      * @return The value.
      */
    public java.lang.CharSequence getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * URL to the homepage
      * @param value The value of 'url'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.url = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * URL to the homepage
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'url' field.
      * URL to the homepage
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearUrl() {
      url = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'image' field.
      * logo of the organisation
      * @return The value.
      */
    public net.stefanfuchs.fux.avro.dto.ad.OrgImage getImage() {
      return image;
    }

    /**
      * Sets the value of the 'image' field.
      * logo of the organisation
      * @param value The value of 'image'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setImage(net.stefanfuchs.fux.avro.dto.ad.OrgImage value) {
      validate(fields()[8], value);
      this.imageBuilder = null;
      this.image = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'image' field has been set.
      * logo of the organisation
      * @return True if the 'image' field has been set, false otherwise.
      */
    public boolean hasImage() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'image' field and creates one if it doesn't exist yet.
     * logo of the organisation
     * @return This builder.
     */
    public net.stefanfuchs.fux.avro.dto.ad.OrgImage.Builder getImageBuilder() {
      if (imageBuilder == null) {
        if (hasImage()) {
          setImageBuilder(net.stefanfuchs.fux.avro.dto.ad.OrgImage.newBuilder(image));
        } else {
          setImageBuilder(net.stefanfuchs.fux.avro.dto.ad.OrgImage.newBuilder());
        }
      }
      return imageBuilder;
    }

    /**
     * Sets the Builder instance for the 'image' field
     * logo of the organisation
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setImageBuilder(net.stefanfuchs.fux.avro.dto.ad.OrgImage.Builder value) {
      clearImage();
      imageBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'image' field has an active Builder instance
     * logo of the organisation
     * @return True if the 'image' field has an active Builder instance
     */
    public boolean hasImageBuilder() {
      return imageBuilder != null;
    }

    /**
      * Clears the value of the 'image' field.
      * logo of the organisation
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearImage() {
      image = null;
      imageBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * The postal address of the organisation
      * @return The value.
      */
    public net.stefanfuchs.fux.avro.dto.ad.OrgAddress getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * The postal address of the organisation
      * @param value The value of 'address'.
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setAddress(net.stefanfuchs.fux.avro.dto.ad.OrgAddress value) {
      validate(fields()[9], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * The postal address of the organisation
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * The postal address of the organisation
     * @return This builder.
     */
    public net.stefanfuchs.fux.avro.dto.ad.OrgAddress.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(net.stefanfuchs.fux.avro.dto.ad.OrgAddress.newBuilder(address));
        } else {
          setAddressBuilder(net.stefanfuchs.fux.avro.dto.ad.OrgAddress.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * The postal address of the organisation
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder setAddressBuilder(net.stefanfuchs.fux.avro.dto.ad.OrgAddress.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * The postal address of the organisation
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * The postal address of the organisation
      * @return This builder.
      */
    public net.stefanfuchs.fux.avro.dto.ad.Organisation.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Organisation build() {
      try {
        Organisation record = new Organisation();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.partnerId = fieldSetFlags()[1] ? this.partnerId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.email = fieldSetFlags()[3] ? this.email : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.phone = fieldSetFlags()[4] ? this.phone : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.phone2 = fieldSetFlags()[5] ? this.phone2 : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.fax = fieldSetFlags()[6] ? this.fax : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.url = fieldSetFlags()[7] ? this.url : (java.lang.CharSequence) defaultValue(fields()[7]);
        if (imageBuilder != null) {
          record.image = this.imageBuilder.build();
        } else {
          record.image = fieldSetFlags()[8] ? this.image : (net.stefanfuchs.fux.avro.dto.ad.OrgImage) defaultValue(fields()[8]);
        }
        if (addressBuilder != null) {
          record.address = this.addressBuilder.build();
        } else {
          record.address = fieldSetFlags()[9] ? this.address : (net.stefanfuchs.fux.avro.dto.ad.OrgAddress) defaultValue(fields()[9]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Organisation>
    WRITER$ = (org.apache.avro.io.DatumWriter<Organisation>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Organisation>
    READER$ = (org.apache.avro.io.DatumReader<Organisation>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
